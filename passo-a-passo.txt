101
#Init do projeto
1) gradle init na pasta do projeto

2) escolhi basic (build structure only) e nome default

3) uso KTS para buildscript e sim para new APIs


#Dependencias
Vamos focar nas dependencias
1) Configuração do settings.gradle.kts padrão para realizar a configuração dos repositório de plugin e dependência
commit: f287a59199a4e90953e453f29660b1f88a42955b

2) Nosso foco primário é o KMP (Kotlin multiplatform), depois avançar para o KMM(Kotlin multiplatform mobile). Vamos instalar os seguintes plugins a fim de criar uma biblioteca compartilhada
* org.jetbrains.kotlin.multiplatform (https://kotlinlang.org/docs/multiplatform-dsl-reference.html)

A nossa primeira biblioteca será de networking. Um desafio simples mas de grande impacto nos projetos em geral.

A plataformas (targets) escolhidas nesse primeiro momento será Android. Configurando uma estrutura multiplataforma para apenas uma, vamos avançar para configurar para as demais. Vamos distributir a networking como uma biblioteca, por isso o plugin necessário é o 
* com.android.library 

OBS: é necessário configurar o primeiro plugin, realizar o sync, depois o segundo
commit: 6f90f5cf6e3d0374cbaba9afbf7ef28c5d5fe7e5

3) Uma configuração manual está tornando extremamente complexo o reconhecimento das hierarquia do KMP. Eu criei um pasta manualmente chamda "network", adicionei o arquivo build.gradle.kts nela e configurei o básico do KMP neste arquivo. Olhando diversos samples adicionei a pasta "src" e dentro dela a "commonMain". Porém a IDE se recusa a detectar essa pasta como parte da estrutua... Eu estive utilizando o Intellij Ultimate para realizar a configuração manual.

Resolvi utilizar o Android Studio e o mesmo reconheceu minha estrutura. Farei o processo inverso, abrirei os samples no Intellij Ultimate para verificar se este reconhece a estrutura de um projeto KMP.

Bem, ao abrir um projeto novo (KMP) ele reconheceu as pastas da estrutura. Apaguei a pasta .idea e reabri o projeto pelo Intellij Ultimate mas mesmo assim não funcionou... Fiz um Invalidate Cache and Restart completo e mesmo assim sem resultado. Vou seguir utilizando o Android Studio para essa atividade pois ele se mostrou mais funcional.

Adicionei uma pasta via Android Studio, fiz o sync e funcionou. Essa é a IDE necessária para KMP.

commit: ac650b89fb48282698a48fa2abb790394a3ffc4c

FUNFACT: Após realizar a adição dos targets iOS e realizar o sync pelo Android Studio, o Intellij Ultimate reconheceu minha estrutura de pastas.

Adicionei uma pasta .kotlin no gitignore

commit: 9bad928402f3b09f036eba9b0957f069482bc848

4) Bem, iniciarei meu estudo sobre o ktor-client para construir uma camada de network compartilhada.
Utilizando o KTor como client, percebi que para realizar as requisições HTTP, utiliza=se de uma "engine". A Engine é a responsável por realizar efetivamente as chamadas REST. Cada plataforma utiliza-se de um Engine
Android: ktor-client-android OU ktor-client-okhttp
iOS: ktor-client-darwin

Com isso, escrevi meu primeiro método expect-actual utilizando o koin para DI.

Defini um método chamado "targetModule", onde este será responsável por injetar as dependências de cada target. Ele é um método expect pois a implementação deve ser feita em cada target. (Já me surgindo dúvidas de como configurar elementos com dependência, ex: interceptors)

Nos samples da própria JetBrains eles usam o koin para DI, vou seguir nesta mesma linha.

commit: 7f4d53ff9d29aa94faf6aece0027ebe851949725

5) Ao declarar um método expect no commonMain, ele me dá a opção de auto-criar os actual nos targets definidos... Porém notei que para o Android ele cria um pacote único ao invés de uma estrutura dev... rafaz... network...

Acredito que isso ocorreu pois não tem criação de pacote no commonMain, ele criou uma pasta única de nome dev.rafaz.network

Não sei se isso será um novo padrão mas é questionável